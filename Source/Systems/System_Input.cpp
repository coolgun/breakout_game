// This is an independent project of an individual developer. Dear PVS-Studio, please check it.
// PVS-Studio Static Code Analyzer for C, C++, C#, and Java: http://www.viva64.com
#include "System_Input.h"

using namespace game;
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
///
/// Constructor
///
///
///-------------------------------------------------------------------------
ASystemInput::ASystemInput()
{

}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
///
/// Destructor
///
///
///-------------------------------------------------------------------------
ASystemInput::~ASystemInput()
{


}
///-------------------------------------------------------------------------







 ///------------------------------------------------------------------------
///
/// <summary>
/// нажатие на кнопку мыш
/// </summary>
///
///-------------------------------------------------------------------------
bool ASystemInput::mouseDown(const dm::EventInput &input)
{
    updatingSystem();
    bool ok = false;
    for (const auto &obj : components)
    {
        ok |= obj->mouseDown(input);
    }
    return ok;
}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
/// <summary>
/// двжиение мыш
/// </summary>
///
///-------------------------------------------------------------------------
void ASystemInput::mouseMove(const dm::EventInput &input)
{
    updatingSystem();
    for (const auto &obj : components)
    {
        obj->mouseMove(input);
    }
}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
/// <summary>
/// опыстили кнопку мыш
/// </summary>
///
///-------------------------------------------------------------------------
void ASystemInput::mouseUp(const dm::EventInput &input)
{
    updatingSystem();
    for (const auto &obj : components)
    {
        obj->mouseUp(input);
    }
}
///-------------------------------------------------------------------------








 ///------------------------------------------------------------------------
///
/// <summary>
///
/// </summary>
///
///-------------------------------------------------------------------------
void ASystemInput::update(const float timeSpan)
{
    updatingSystem();
    for (const auto &obj : components)
    {
        obj->update(timeSpan);
    }
}
///-------------------------------------------------------------------------




