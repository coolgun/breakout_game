// This is an independent project of an individual developer. Dear PVS-Studio, please check it.
// PVS-Studio Static Code Analyzer for C, C++, C#, and Java: http://www.viva64.com

#include "base_Random.h"
using namespace dm;
///-------------------------------------------------------------------------








 ///------------------------------------------------------------------------
///
///
///
/// Constructor
///
///
///-------------------------------------------------------------------------
ARandom::ARandom()
    :
        mGenerator(mDevice())
{


}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
/// генерация целочисленных чисел от мин до максимлаьно значения
/// 
///
///
///-------------------------------------------------------------------------
int ARandom::next(const int min, const int max) const
{
    std::uniform_int_distribution<int> dis{ min, max };
    return dis(mGenerator);
}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
/// 
/// генерация целочисленного числа от 0 до максимального
/// 
///
///
///-------------------------------------------------------------------------
int ARandom::next(const int max) const
{
    std::uniform_int_distribution<int> dis{ 0, max };
    return dis(mGenerator);
}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
/// 
/// генерация вещественного числа от о до 1
/// 
///
///
///-------------------------------------------------------------------------
float ARandom::nextReal() const
{
    std::uniform_real_distribution<float> dis{ 0.0f, 1.0f };
    return dis(mGenerator);
}
///-------------------------------------------------------------------------






///------------------------------------------------------------------------
///
/// 
/// генерация вещественного числа 
/// 
///
///
///-------------------------------------------------------------------------
float ARandom::next(const float min, const float max) const
{
    std::uniform_real_distribution<float> dis{ min, max };
    return dis(mGenerator);
}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
/// 
/// шанс выподания, от 0 до 100%
/// 
///
///
///-------------------------------------------------------------------------
bool ARandom::isChance(const float procent)const
{
    std::uniform_real_distribution<float> dis{ 0.0f, 101.0f };
    const auto chance = dis(mGenerator);
    return chance < procent ? true : false;
}
///-------------------------------------------------------------------------





